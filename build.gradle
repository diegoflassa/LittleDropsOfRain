import app.web.diegoflassa_site.littledropsofrain.buildsrc.Versions

buildscript {
    ext.kotlin_version = Versions.kotlinCompilerVersion
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${Versions.gradle}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlinCompilerVersion}"
        classpath "com.google.gms:google-services:${Versions.google_services}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${Versions.safeargs_plugin}"

        // Add the Crashlytics Gradle plugin.
        classpath "com.google.firebase:firebase-crashlytics-gradle:${Versions.crashlytics}"
        classpath "com.google.firebase:perf-plugin:${Versions.perf}"  // Performance Monitoring plugin"

        classpath "com.google.android.gms:oss-licenses-plugin:${Versions.oss_plugin}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.diffplug.spotless' version "5.8.2"
}

subprojects {
    repositories {
        google()
		mavenCentral()
        jcenter()
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint).userData(['disabled_rules' : 'no-wildcard-imports'])
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        preferProjectModules()
        // force certain versions of dependencies (including transitive)
        //  *append new forced modules:
        force "org.jetbrains.kotlin:kotlin-parcelize-runtime:${Versions.kotlinCompilerVersion}"
        //  *replace existing forced modules with new ones:
        forcedModules = ["org.jetbrains.kotlin:kotlin-parcelize-runtime:${Versions.kotlinCompilerVersion}"]
        // add dependency substitution rules
        dependencySubstitution {
            substitute module("org.jetbrains.kotlin:kotlin-android-extensions-runtime:${Versions.kotlinCompilerVersion}") with module("org.jetbrains.kotlin:kotlin-parcelize-runtime:${Versions.kotlinCompilerVersion}")
        }
    }
}

allprojects {
    repositories {
        google()
		mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
     }
}