apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics' // Apply the Crashlytics Gradle plugin
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.google.firebase.firebase-perf'

import app.web.diegoflassa_site.littledropsofrain.buildsrc.Versions
import app.web.diegoflassa_site.littledropsofrain.buildsrc.Config

// Creates a variable called keystorePropertiesFile, and initializes it to the
// keystore.properties file.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initializes a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Loads the keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        applicationId Config.applicationId
        minSdkVersion Config.minimumSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental": "true"]
            }
        }
    }
    sourceSets {
        //DFL - Não use por enquanto
    }
    signingConfigs {
        // DFL - Configuração para assinar o APK. Nao se preocupe agora
        release {
            storeFile file(keystoreProperties['KEYSTORE_FILE'])
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['KEYSTORE_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
        }
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def appName = "littledropsofrain"
                outputFileName = "${appName}-${outputFileName}"
            }
        }
    }
    compileOptions {
        // Sets Java compatibility to Java 1.8
		// DO NOT UPDATE or will get Class Not Found Exception
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
        // Enables Jetpack Compose for this module
        compose true
    }
    lintOptions {
        abortOnError false
    }

    buildToolsVersion Config.buildToolsVersion
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    composeOptions {
        kotlinCompilerVersion Versions.kotlinCompilerVersion
        kotlinCompilerExtensionVersion Versions.androidxJetpackCompose
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        useIR = true
        // Treat all Kotlin warnings as errors
        allWarningsAsErrors = true
        // Set the target vm version
		// DO NOT UPDATE or will get Class Not Found Exception
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        // Use experimental APIs
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        freeCompilerArgs += '-Xallow-jvm-ir-dependencies'
    }
}

dependencies {

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$Versions.workVersion"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$Versions.workVersion"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$Versions.workVersion"

    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Volley
    implementation 'com.android.volley:volley:1.1.1'

    // Licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // UCrop
    implementation 'com.github.yalantis:ucrop:2.2.6'

    // Coil COroutines Image Loader
    implementation 'io.coil-kt:coil:1.0.0'


    // Jetpack Compose toolkit dependencies
    implementation "androidx.compose.ui:ui:${Versions.androidxJetpackCompose}"
    // Tooling support (Previews, etc.)
    implementation "androidx.ui:ui-tooling:${Versions.androidxJetpackCompose}"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:${Versions.androidxJetpackCompose}"
    // Material Design
    implementation "androidx.compose.material:material:${Versions.androidxJetpackCompose}"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:${Versions.androidxJetpackCompose}"
    implementation "androidx.compose.material:material-icons-extended:${Versions.androidxJetpackCompose}"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:${Versions.androidxJetpackCompose}"
    implementation "androidx.compose.runtime:runtime-rxjava2:${Versions.androidxJetpackCompose}"
    // UI Tests
    androidTestImplementation "androidx.ui:ui-test:${Versions.androidxJetpackCompose}"


    // Import the BoM for the Firebase platform
    implementation platform("com.google.firebase:firebase-bom:${Versions.firebaseBOM}")
    // com.google.firebase
    implementation 'com.google.firebase:firebase-iid'
    // Add the Firebase SDK for Google Analytics
    // For an optimal experience using FCM, add the Firebase SDK
    // for Google Analytics. This is recommended, but not required.
    // Recommended: Add the Firebase SDK for Google Analytics.
    // Add the Firebase Crashlytics SDK.
    // Declare the dependencies for the Remote Config and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-appindexing'
    // Firebase Authentication (Kotlin)
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    // Add the SDK for Firebase Cloud Messaging
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-inappmessaging-ktx'
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    // Firebase UI
    implementation 'com.firebaseui:firebase-ui-auth:6.3.0'
    implementation 'com.firebaseui:firebase-ui-database:4.0.0'
    implementation 'com.firebaseui:firebase-ui-storage:6.2.1'
    // OAuth Library
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.22.0'

    // GSon
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.google.android.gms:play-services-location:17.1.0'

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    // Google Sign In SDK (only required for Google Sign In)
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.gms:google-services:4.3.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlinCompilerVersion}"
    implementation 'androidx.activity:activity-ktx:1.2.0-beta01'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-beta01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0-beta01'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc03'
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation 'androidx.room:room-ktx:2.2.5'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'


    // Icons
    implementation "com.joanzapata.iconify:android-iconify-fontawesome:${Versions.iconify}" // (v4.5)
    implementation "com.joanzapata.iconify:android-iconify-entypo:${Versions.iconify}" // (v3,2015)
    implementation "com.joanzapata.iconify:android-iconify-typicons:${Versions.iconify}" // (v2.0.7)
    implementation "com.joanzapata.iconify:android-iconify-material:${Versions.iconify}" // (v2.0.0)
    implementation "com.joanzapata.iconify:android-iconify-material-community:${Versions.iconify}" // (v1.4.57)
    implementation "com.joanzapata.iconify:android-iconify-meteocons:${Versions.iconify}" // (latest)
    implementation "com.joanzapata.iconify:android-iconify-weathericons:${Versions.iconify}" // (v2.0)
    implementation "com.joanzapata.iconify:android-iconify-simplelineicons:${Versions.iconify}" // (v1.0.0)
    implementation "com.joanzapata.iconify:android-iconify-ionicons:${Versions.iconify}" // (v2.0.1)

    kapt 'androidx.databinding:databinding-compiler-common:4.1.1'
    kapt 'androidx.room:room-compiler:2.2.5'

    // Testing dependencies
    testImplementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3-alpha02'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test:runner:1.3.0'

    testImplementation 'junit:junit:4.13.1'
}
